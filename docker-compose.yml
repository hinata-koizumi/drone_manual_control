services:
  # メッセージ定義ビルド（最適化）
  drone_msgs:
    build:
      context: .
      dockerfile: docker/Dockerfile.msgs
      args:
        BUILDKIT_INLINE_CACHE: 1
    volumes:
      - ./src/drone_msgs:/workspace/src/drone_msgs:ro
      - ./src/px4_msgs:/workspace/src/px4_msgs:ro
      - ./install:/workspace/install
    environment:
      - COLCON_OPTIONS=--packages-select drone_msgs px4_msgs --parallel-workers 1

  # ブリッジノードビルド（最適化）
  bridge:
    build:
      context: .
      dockerfile: docker/Dockerfile.bridge
      args:
        BUILDKIT_INLINE_CACHE: 1
    volumes:
      - ./src:/workspace/src:ro
      - ./install:/workspace/install
      - ./config:/workspace/config:ro
    environment:
      - COLCON_OPTIONS=--packages-select common command_bridge state_bridge angle_bridge outer_motor_bridge --parallel-workers 1
    depends_on:
      - drone_msgs

  # シミュレーション起動
  simulator:
    build:
      context: .
      dockerfile: docker/Dockerfile.sim
    volumes:
      - ./src/sim_launch:/workspace/src/sim_launch:ro
      - ./models:/workspace/models:ro
      - ./custom_airframes:/workspace/custom_airframes:ro
      - ./config:/workspace/config:ro
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    environment:
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
    depends_on:
      - bridge

  # 手動制御ノード（最適化）
  manual_control:
    build:
      context: .
      dockerfile: docker/Dockerfile.manual_control
      args:
        BUILDKIT_INLINE_CACHE: 1
    volumes:
      - ./src/manual_control:/workspace/src/manual_control:ro
      - ./config:/workspace/config:ro
      - ./action_sequences:/workspace/action_sequences:ro
    environment:
      - COLCON_OPTIONS=--packages-select manual_control --parallel-workers 1
    depends_on:
      - bridge

  # 制御インターフェース（一時的に無効化）
  # control_interface:
  #   build:
  #     context: .
  #     dockerfile: docker/Dockerfile.interface
  #   volumes:
  #     - ./src/control_interface:/workspace/src/control_interface:ro
  #     - ./config:/workspace/config:ro
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - manual_control

networks:
  default:
    name: drone_manual_control_network 