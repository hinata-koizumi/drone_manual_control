version: '3.8'

services:
  # メッセージ定義ビルド（CI最適化）
  drone_msgs:
    image: drone-manual-control-msgs:latest
    command: bash -c "ls /msgs_ws/install/lib/python3.10/site-packages/drone_msgs/msg/_drone_control_command.py"
    healthcheck:
      test: ["CMD", "ls", "/msgs_ws/install/lib/python3.10/site-packages/drone_msgs/msg/_drone_control_command.py"]
      interval: 10s
      timeout: 5s
      retries: 3

  # ブリッジノード（CI最適化）
  bridge:
    image: drone-manual-control-bridge:latest
    depends_on:
      drone_msgs:
        condition: service_healthy
    environment:
      - ROS_DOMAIN_ID=0
    command: >
      bash -c "
        source /opt/ros/humble/setup.sh &&
        source /bridge_ws/install/setup.sh &&
        ros2 run state_bridge state_bridge_node"
    healthcheck:
      test: ["CMD", "ros2", "node", "list"]
      interval: 10s
      timeout: 5s
      retries: 3

  # 手動制御ノード（CI最適化）
  manual_control:
    image: drone-manual-control:latest
    depends_on:
      bridge:
        condition: service_healthy
    environment:
      - ROS_DOMAIN_ID=0
    command: >
      bash -c "
        source /opt/ros/humble/setup.sh &&
        source /workspace/install/setup.sh &&
        ros2 run manual_control action_executor"
    healthcheck:
      test: ["CMD", "pgrep", "-f", "action_executor"]
      interval: 10s
      timeout: 5s
      retries: 3

  # 統合テスト実行
  integration_test:
    image: drone-manual-control:latest
    depends_on:
      manual_control:
        condition: service_healthy
    environment:
      - ROS_DOMAIN_ID=0
    command: >
      bash -c "
        source /opt/ros/humble/setup.sh &&
        source /workspace/install/setup.sh &&
        python3 -m pytest tests/test_integration.py -v --tb=short"
    volumes:
      - ./test-results:/workspace/test-results

networks:
  default:
    name: drone_manual_control_ci_network 